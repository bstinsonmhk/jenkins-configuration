<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Runs the system tests on the latest incremental RHEL7 build of the develop branch - Disabled until we can use cmake 3 on RHEL7</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>14</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.trac.TracProjectProperty plugin="trac@1.13">
      <tracWebsite>http://trac.mantidproject.org/mantid/</tracWebsite>
    </hudson.plugins.trac.TracProjectProperty>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.10">
      <projectUrl>http://github.com/mantidproject/systemtests/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <com.suryagaddipati.jenkins.SlaveUtilizationProperty plugin="slave-utilization-plugin@1.8">
      <needsExclusiveAccessToNode>false</needsExclusiveAccessToNode>
      <singleInstancePerSlave>false</singleInstancePerSlave>
      <slaveUtilizationPercentage>0</slaveUtilizationPercentage>
    </com.suryagaddipati.jenkins.SlaveUtilizationProperty>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.2">
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.27">
      <wallDisplayName>Develop Rolling System Tests (on RHEL7)</wallDisplayName>
    </de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.2.6">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>git://github.com/mantidproject/systemtests.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/develop</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.CloneOption>
        <shallow>true</shallow>
        <reference></reference>
        <timeout>30</timeout>
      </hudson.plugins.git.extensions.impl.CloneOption>
      <hudson.plugins.git.extensions.impl.CleanCheckout/>
    </extensions>
  </scm>
  <assignedNode>rhel7</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec># Check once per hour for any commits to the systemtests repository itself
@hourly</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
    <org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger plugin="buildresult-trigger@0.17">
      <spec>@hourly</spec>
      <combinedJobs>false</combinedJobs>
      <jobsInfo>
        <org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
          <jobNames>develop_rhel7</jobNames>
          <checkedResults>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>SUCCESS</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
            <org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
              <checked>UNSTABLE</checked>
            </org.jenkinsci.plugins.buildresulttrigger.model.CheckedResult>
          </checkedResults>
        </org.jenkinsci.plugins.buildresulttrigger.model.BuildResultTriggerInfo>
      </jobsInfo>
    </org.jenkinsci.plugins.buildresulttrigger.BuildResultTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.32.1">
      <project>develop_rhel7</project>
      <filter>build/mantid*.rpm</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#####################################################################################
# Find and install package
#####################################################################################
npkgs=`find . -maxdepth 1 -name &apos;*.rpm&apos; | wc -l`
if [[ $npkgs -ne 1 ]]; then
  echo &quot;Found more than 1 package to install.&quot;
  exit 1
fi

pkg=`find . -maxdepth 1 -name &apos;*.rpm&apos;`
pkgname=`basename $pkg | cut -d&apos;-&apos; -f 1`

sudo rpm --upgrade $pkg

#####################################################################################
# Run the tests
#####################################################################################
# Kill the user properties
userprops=~/.mantid/Mantid.user.properties
rm -f $userprops

# install directory is package name with exception of
# release package that goes in Mantid
case $pkgname in
  mantid) installdir=Mantid;;
  *) installdir=$pkgname
esac

# record version tested
/opt/$installdir/bin/MantidPlot -r &gt; ${WORKSPACE}/revision_tested.log

set +e #don&apos;t immediately exit on failure - we want the performance report to be generated still
python InstallerTesting/runSystemTests.py -m /opt/$installdir/bin
status=$?
set -e #exit on failures from now on

#####################################################################################
# Create performance database
#####################################################################################
# Parse the output to capture the performance metrics
if [ ${NODE_NAME} = &quot;isis-ndw1457&quot; ]; then
  REVISION=`head -1 ${WORKSPACE}/revision_tested.log`
  cd ${WORKSPACE}/logs
  python ${WORKSPACE}/PerformanceMonitoring/xunit_to_sql.py SystemTestsReport.xml --db /home/builder/MantidPerformanceTests/SystemTestsDevelop.db --commit $REVISION
  python ${WORKSPACE}/PerformanceMonitoring/make_report.py /home/builder/MantidPerformanceTests/SystemTestsDevelop.db
fi

#####################################################################################
# Remove package
#####################################################################################
sudo rpm --erase $pkgname

# Return the value from the tests run in the Python command above
exit ${retval}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*tested.log,logs/*-mismatch.nxs</artifacts>
      <latestOnly>true</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.3">
      <reportTargets>
        <htmlpublisher.HtmlPublisherTarget>
          <reportName>System tests performance</reportName>
          <reportDir>logs/Report</reportDir>
          <reportFiles>report.htm</reportFiles>
          <keepAll>false</keepAll>
          <allowMissing>true</allowMissing>
          <wrapperName>htmlpublisher-wrapper.html</wrapperName>
        </htmlpublisher.HtmlPublisherTarget>
      </reportTargets>
    </htmlpublisher.HtmlPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.0">
      <testResults>logs/*.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers/>
    </hudson.tasks.junit.JUnitResultArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.5.14"/>
    <hudson.plugins.xvnc.Xvnc plugin="xvnc@1.20">
      <takeScreenshot>false</takeScreenshot>
      <useXauthority>true</useXauthority>
    </hudson.plugins.xvnc.Xvnc>
  </buildWrappers>
</project>